name: Build and test flake outputs
on:
  push:
  workflow_call:
    inputs:
      branch:
        description: Branch name to build on
        default: ''
        required: false
        type: string

jobs:
  nix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system:
          - aarch64
          - x86_64
        nix-command:
          - flake check
          - eval .#apps.$_system.neovim.program

        include:
          - nix-command: develop
            system: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - name: Install nix
        uses: cachix/install-nix-action@v16

      - name: Build command (aarch64)
        if: matrix.system == 'aarch64'
        uses: uraimo/run-on-arch-action@13e4281fcff03a9fbf9c564b6bc77cbef951a6f8
        with:
          arch: aarch64
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: --volume /nix:/nix
          install: apk --no-cache add curl git xz
          env: |
            _system: ${{ matrix.system }}-linux
          run: |
            set -euo pipefail
            mkdir -p /etc/nix
            echo "max-jobs = auto" >> /etc/nix/nix.conf
            echo "trusted-users = root" >> /etc/nix/nix.conf
            echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
            echo "build-users-group =" >> /etc/nix/nix.conf
            export USER=root
            echo "::group::Install nix"
            sh <(curl -L https://nixos.org/nix/install) --no-channel-add
            . ${HOME}/.nix-profile/etc/profile.d/nix.sh
            echo "::group::Build command"
            nix \
              --verbose \
              --log-format bar-with-logs \
              --option keep-going true \
              --show-trace \
              ${{ matrix.nix-command }}

      - name: Build command (x86_64)
        if: matrix.system == 'x86_64'
        env:
          _system: ${{ matrix.system }}-linux
        run: |
          nix \
            --verbose \
            --log-format bar-with-logs \
            --keep-going \
            --show-trace \
            ${{ matrix.nix-command }}

